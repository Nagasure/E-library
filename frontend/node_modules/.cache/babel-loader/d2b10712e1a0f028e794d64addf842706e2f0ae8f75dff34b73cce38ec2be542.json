{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost/e-library-web-app/backend/api';\nexport const bookService = {\n  async getBooks(params = {}) {\n    try {\n      const queryParams = new URLSearchParams();\n      if (params.title) queryParams.append('title', params.title);\n      if (params.page) queryParams.append('page', params.page);\n      if (params.limit) queryParams.append('limit', params.limit);\n      if (params.category) queryParams.append('category', params.category);\n      const response = await fetch(`${API_URL}/books.php?${queryParams}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.message || 'Failed to fetch books');\n      }\n      return {\n        books: data.data || [],\n        page: parseInt(data.page) || 1,\n        total_pages: parseInt(data.total_pages) || 1,\n        total: parseInt(data.total) || 0\n      };\n    } catch (error) {\n      console.error('Error in getBooks:', error);\n      throw error;\n    }\n  },\n  async addBook(bookData) {\n    try {\n      console.log('Sending book data:', bookData); // Debug log\n      const response = await axios.post(`${API_URL}/addBook.php`, bookData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Response:', response.data); // Debug log\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Request error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  async deleteBook(bookId) {\n    const response = await axios.delete(`${API_URL}/deleteBook.php`, {\n      data: {\n        id: bookId\n      }\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","bookService","getBooks","params","queryParams","URLSearchParams","title","append","page","limit","category","response","fetch","ok","Error","data","json","error","message","books","parseInt","total_pages","total","console","addBook","bookData","log","post","headers","_error$response","_error$response2","deleteBook","bookId","delete","id"],"sources":["C:/xampp/htdocs/e-library-web-app/frontend/src/services/bookService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost/e-library-web-app/backend/api';\r\n\r\nexport const bookService = {\r\n    async getBooks(params = {}) {\r\n        try {\r\n            const queryParams = new URLSearchParams();\r\n            if (params.title) queryParams.append('title', params.title);\r\n            if (params.page) queryParams.append('page', params.page);\r\n            if (params.limit) queryParams.append('limit', params.limit);\r\n            if (params.category) queryParams.append('category', params.category);\r\n            \r\n            const response = await fetch(`${API_URL}/books.php?${queryParams}`);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            \r\n            const data = await response.json();\r\n            if (data.error) {\r\n                throw new Error(data.message || 'Failed to fetch books');\r\n            }\r\n            \r\n            return {\r\n                books: data.data || [],\r\n                page: parseInt(data.page) || 1,\r\n                total_pages: parseInt(data.total_pages) || 1,\r\n                total: parseInt(data.total) || 0\r\n            };\r\n        } catch (error) {\r\n            console.error('Error in getBooks:', error);\r\n            throw error;\r\n        }\r\n    },\r\n    \r\n    async addBook(bookData) {\r\n        try {\r\n            console.log('Sending book data:', bookData); // Debug log\r\n            const response = await axios.post(`${API_URL}/addBook.php`, bookData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            console.log('Response:', response.data); // Debug log\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Request error:', error.response?.data || error.message);\r\n            throw error.response?.data || error;\r\n        }\r\n    },\r\n    \r\n    async deleteBook(bookId) {\r\n        const response = await axios.delete(`${API_URL}/deleteBook.php`, {\r\n            data: { id: bookId }\r\n        });\r\n        return response.data;\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}