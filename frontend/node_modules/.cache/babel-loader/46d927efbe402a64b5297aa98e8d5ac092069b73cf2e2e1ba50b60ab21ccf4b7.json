{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost/e-library-web-app/backend/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const bookService = {\n  getAllBooks: () => api.get('/books.php'),\n  getBook: id => api.get(`/books.php?id=${id}`),\n  createBook: data => api.post('/books.php', data),\n  updateBook: (id, data) => api.post('/updateBook.php', {\n    ...data,\n    id\n  }),\n  deleteBook: id => api.post('/deleteBook.php', {\n    id\n  })\n};\nexport const authService = {\n  login: credentials => api.post('/login.php', credentials),\n  logout: () => {\n    localStorage.removeItem('token');\n    return Promise.resolve();\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","bookService","getAllBooks","get","getBook","id","createBook","data","post","updateBook","deleteBook","authService","login","credentials","logout","removeItem","resolve"],"sources":["C:/xampp/htdocs/e-library-web-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost/e-library-web-app/backend/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport const bookService = {\r\n  getAllBooks: () => api.get('/books.php'),\r\n  getBook: (id) => api.get(`/books.php?id=${id}`),\r\n  createBook: (data) => api.post('/books.php', data),\r\n  updateBook: (id, data) => api.post('/updateBook.php', { ...data, id }),\r\n  deleteBook: (id) => api.post('/deleteBook.php', { id }),\r\n};\r\n\r\nexport const authService = {\r\n  login: (credentials) => api.post('/login.php', credentials),\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    return Promise.resolve();\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,gDAAgD;AAErE,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzBC,WAAW,EAAEA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,YAAY,CAAC;EACxCC,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,iBAAiBE,EAAE,EAAE,CAAC;EAC/CC,UAAU,EAAGC,IAAI,IAAKrB,GAAG,CAACsB,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;EAClDE,UAAU,EAAEA,CAACJ,EAAE,EAAEE,IAAI,KAAKrB,GAAG,CAACsB,IAAI,CAAC,iBAAiB,EAAE;IAAE,GAAGD,IAAI;IAAEF;EAAG,CAAC,CAAC;EACtEK,UAAU,EAAGL,EAAE,IAAKnB,GAAG,CAACsB,IAAI,CAAC,iBAAiB,EAAE;IAAEH;EAAG,CAAC;AACxD,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG;EACzBC,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAACsB,IAAI,CAAC,YAAY,EAAEK,WAAW,CAAC;EAC3DC,MAAM,EAAEA,CAAA,KAAM;IACZnB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOhB,OAAO,CAACiB,OAAO,CAAC,CAAC;EAC1B;AACF,CAAC;AAED,eAAe9B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}